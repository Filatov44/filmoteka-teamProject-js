{"mappings":"oeAAA,MAAMA,EAAO,CACTC,QAASC,SAASC,cAAc,mBAChCC,MAAOF,SAASC,cAAc,kBAGlCH,EAAKC,QAAQI,iBAAiB,SAGvB,WACCL,EAAKI,MAAME,UAAUC,SAAS,0BAC9BP,EAAKI,MAAME,UAAUE,OAAO,yBAC5BR,EAAKC,QAAQK,UAAUG,IAAI,0BAE3BT,EAAKC,QAAQK,UAAUG,IAAI,wB,IAPnCT,EAAKI,MAAMC,iBAAiB,SAYrB,WACCL,EAAKC,QAAQK,UAAUC,SAAS,0BAChCP,EAAKC,QAAQK,UAAUE,OAAO,yBAC9BR,EAAKI,MAAME,UAAUG,IAAI,0BAEzBT,EAAKI,MAAME,UAAUG,IAAI,wB,ICvBjC,IAAAC,EAAAC,EAAA,S,wBAIA,MAAMC,EAAcV,SAASC,cAAc,aAEfD,SAASC,cAAc,oBAC/BE,iBAAiB,SAAS,IAAMQ,EAAa,iBAOjE,SAASA,EAAaC,GAGlB,IAAIC,GAAiB,EAAAL,EAAAM,YAAWF,GAKhC,QAAuBG,IAAnBF,GAA0D,IAA1BA,EAAeG,OAC/CC,QAAQC,IAAI,aAET,CAIH,MAAMC,EAAQN,EAAeO,KAAIC,IAAQ,EAAAC,EAAAC,YAAWF,KAIpDX,EAAYc,UAAY,GACxBd,EAAYe,mBAAmB,YAAaN,GAC5CF,QAAQC,IAAI,oBAAqBL,E,EAzBfb,SAASC,cAAc,kBAC/BE,iBAAiB,SAAS,IAAMQ,EAAa,e,WCX/DH,EAAAC,EAAA,S,WAGA,MAAMiB,EAAc1B,SAASC,cAAc,kBACrC0B,EAAgB3B,SAASC,cAAc,oBAmC7C,SAAS2B,EAAaC,EAAUC,GAE5B,IAAIC,GAAQ,EAAAvB,EAAAM,YAAWe,GAGvB,GAAIE,EAAMC,MAAKX,GAAQA,EAAKY,KAAOH,EAAKG,KAAK,CACzC,IAAId,EAAQY,EAAMG,QAAOb,GAAQA,EAAKY,KAAOH,EAAKG,MAElD,EAAAzB,EAAA2B,YAAW,GAAGN,IAAYV,E,CAG9B,IAAKY,EAAMC,MAAKX,GAAQA,EAAKY,KAAOH,EAAKG,KAAK,CAC1C,IAAId,EAAQ,IAAIY,EAAOD,IACvB,EAAAtB,EAAA2B,YAAW,GAAGN,IAAYV,E,EAjBlCO,EAAYvB,iBAAiB,SAAS,IAAMyB,EAAa,YAAaP,QACtEM,EAAcxB,iBAAiB,SAAS,IAAMyB,EAAa,cAAeP","sources":["src/js/header-library.js","src/js/library-watched-btn.js","src/js/modal-btns.js"],"sourcesContent":["const refs = {\n    watched: document.querySelector('.js-btn-watched'),\n    queue: document.querySelector('.js-btn-queue'),\n};\n\nrefs.watched.addEventListener('click', currentWatchedPage);\nrefs.queue.addEventListener('click', currentQueuePage);\n\nexport function currentWatchedPage() {\n    if (refs.queue.classList.contains('library__btn--current')) {\n        refs.queue.classList.remove('library__btn--current');\n        refs.watched.classList.add('library__btn--current');\n    } else {\n        refs.watched.classList.add('library__btn--current');\n    }\n};\n\n\nexport function currentQueuePage() {\n    if (refs.watched.classList.contains('library__btn--current')) {\n        refs.watched.classList.remove('library__btn--current');\n        refs.queue.classList.add('library__btn--current');\n    } else {\n        refs.queue.classList.add('library__btn--current');\n    }\n\n};","import { getStorage } from \"./local-storage\";\nimport { headMarkup, watchedMarkup } from './gallery-item';\nimport { createMarkup } from '../index';\n\nconst galleryLibr = document.querySelector(\".listFilm\");\n// -------------------------------------------------------------------\nconst onLibraryWatchedBtn = document.querySelector(\".library_watched\");\nonLibraryWatchedBtn.addEventListener('click', () => handlWatched(\"watchedList\"));\n\n// -------------------------------------------------------------------\nconst onLibraryQueueBtn = document.querySelector(\".library_queue\");\nonLibraryQueueBtn.addEventListener('click', () => handlWatched(\"queueList\"));\n\n// ===================================================================\nfunction handlWatched(key) {\n    // let array = [];\n    // let newGalleryList = getStorage(\"watchedList\")\n    let newGalleryList = getStorage(key)\n    // const filmId = { filmObject }\n    // array = [...array, filmId]\n    // console.log(newGalleryList);\n\n    if (newGalleryList === undefined || newGalleryList.length === 0) {\n        console.log(\"error\");\n        // нужно добавить оповещение о пустом \n    } else {\n        //---- рендер разметки-------------\n\n        // console.log(newGalleryList);\n        const array = newGalleryList.map(item => headMarkup(item));\n\n        // headMarkup({...newGalleryList});\n        // debugger\n        galleryLibr.innerHTML = \"\";\n        galleryLibr.insertAdjacentHTML('beforeend', array);\n        console.log('ответ для рендера', newGalleryList);\n\n    }\n};\n// ------------------------------------------------------------------\n\n","import { addStorage, getStorage } from \"./local-storage\";\nimport SearchFilm from './trending-movies';\n\nconst addQueueBtn = document.querySelector(\".btnQueueModal\");\nconst addWatchedBtn = document.querySelector(\".btnWatchedModal\");\n\n// 1) надо добавить классы на кнопки модалки,\n// 2) проверить получение item с модалки\n\n\n// test-----------------------------------------------------\n// const modalTest = document.querySelector(\".testModalBtn\");\n// modalTest.addEventListener('click', () => getFilm(20));\n\n// const FilmsService = new SearchFilm();\n// function getFilm(id) {\n//     FilmsService\n//         .getMoviesById(id)\n//         .then(result => console.log(result))\n\n// };\n// function logo(a = \"hello\") {\n//     console.log(a);\n// }\n// ==========================================================\n\n// --------------------------------v1-----------------------------------------------\n// нужно передать в addToStorage\n// let item = { id: 1, title: \"a;\", genresShortList: \"b;\", releaseDate: \"c;\" };\n// let listTog = [{ id: 1, title: \"a;\", genresShortList: \"b;\", releaseDate: \"c;\" },\n// { id: 2, title: \"ddd\", genresShortList: \"aaa\", releaseDate: \"nnn\" },\n// { id: 3, title: \"ccc\", genresShortList: \"sss\", releaseDate: \"mmm\" }];\n\n// addQueueBtn.addEventListener('click', () => addToStorage(\"watchedList\", listTog));\n// ----------------------------------------------------------------------------------\naddQueueBtn.addEventListener('click', () => addToStorage(\"queueList\", item));\naddWatchedBtn.addEventListener('click', () => addToStorage(\"watchedList\", item));\n\n\nfunction addToStorage(listName, film) {\n    // let items = [];\n    let items = getStorage(listName);\n    // console.log(items);\n\n    if (items.find(item => item.id === film.id)) {\n        let array = items.filter(item => item.id !== film.id)\n\n        addStorage(`${listName}`, array)\n\n    }\n    if (!items.find(item => item.id === film.id)) {\n        let array = [...items, film]\n        addStorage(`${listName}`, array)\n    }\n}\n\n\n// ---------------------reserved--------------------------------------------------\n// addQueueBtn.addEventListener('click', () => addToStorage(\"watchedList\", item));\n\n\n// function addToStorage(listName, list) {\n//     // console.log(listName, list);\n//     let array = [];\n\n//     array = [...array, ...list]\n//     addStorage(`${listName}`, array)\n//     // console.log(addStorage);\n// };\n\n// let items = getStorage(\"watchedList\");\n// console.log(items);\n// ============================================================================="],"names":["$aa1852bce7d92573$var$refs","watched","document","querySelector","queue","addEventListener","classList","contains","remove","add","$b5rV1","parcelRequire","$0656eb53c1bf11e2$var$galleryLibr","$0656eb53c1bf11e2$var$handlWatched","key","newGalleryList","getStorage","undefined","length","console","log","array","map","item","$9kkjz","headMarkup","innerHTML","insertAdjacentHTML","$f45503018fc12fd5$var$addQueueBtn","$f45503018fc12fd5$var$addWatchedBtn","$f45503018fc12fd5$var$addToStorage","listName","film","items","find","id","filter","addStorage"],"version":3,"file":"my-library.e35930b9.js.map"}